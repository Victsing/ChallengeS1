# api/config/packages/security.yaml
security:
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        App\Entity\User: 'auto'

    # https://symfony.com/doc/current/security/authenticator_manager.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/_(profiler|wdt)
            security: false
            
        registration:
            pattern: ^/users
            stateless: true
            methods: [POST]
            
        login:
            pattern: ^/login
            stateless: true
            json_login:
                check_path: /login_verification
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        main:
            stateless: true
            provider: app_user_provider
            json_login:
                check_path: /authentication_token
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            jwt: ~
        /:
            pattern: ^/
            stateless: true
            jwt: ~

    access_control:
        - { path: ^/docs, roles: PUBLIC_ACCESS } # Allows accessing the Swagger UI
        - { path: ^/authentication_token, roles: PUBLIC_ACCESS }
        - { path: ^/users/reset/password, roles: PUBLIC_ACCESS }
        - { path: ^/users/reset/password/token, roles: PUBLIC_ACCESS }
        - { path: ^/users/email/verification, roles: PUBLIC_ACCESS }
        - { path: ^/users, roles: IS_AUTHENTICATED_FULLY, methods: [GET, PUT, DELETE, PATCH] }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ˆ/companies, roles: IS_AUTHENTICATED_FULLY, methods: [GET, PUT, DELETE, PATCH] }
        - { path: ˆ/company_size_options, roles: IS_AUTHENTICATED_FULLY, methods: [GET] }
        - { path: ˆ/company_size_options, roles: ROLE_ADMIN, methods: [DELETE, PATCH, POST] }
        - { path: ˆ/company_sector_options, roles: ROLE_ADMIN, methods: [DELETE, PATCH, POST] }
        - { path: ˆ/company_sector_options, roles: IS_AUTHENTICATED_FULLY, methods: [GET] }
        - { path: ˆ/company_revenue_options, roles: ROLE_ADMIN, methods: [DELETE, PATCH, POST] }
        - { path: ˆ/company_revenue_options, roles: IS_AUTHENTICATED_FULLY, methods: [GET] }
        - { path: ˆ/job_ads, roles: [IS_AUTHENTICATED_FULLY, ROLE_EMPLOYER, ROLE_ADMIN], methods: [POST, PUT, DELETE] }
        - { path: ˆ/job_ads, roles: IS_AUTHENTICATED_FULLY, methods: [GET, PATCH] }
        #- { path: ^/, roles: IS_AUTHENTICATED_FULLY }

    role_hierarchy: 
        ROLE_ADMIN: ROLE_ADMIN
        ROLE_EMPLOYER: ROLE_USER

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
